file_main = 
module_top = 
odir = /mnt/c/Users/mogata/Downloads/HWSEC/$(module_top)
all_locks = full_lock full_lock_mux lut_lock mux_lock random_lut_lock sfll_flex sfll_hd trll tt_lock tt_lock_sen xor_lock
locked_verilog=$(foreach ll,$(all_locks),$(file_main)_$(ll)_locked.v)
locked_keys=$(foreach ll,$(all_locks),$(file_main)_$(ll)_locked_key.txt)
locked_dot=$(foreach ll,$(all_locks),$(file_main)_$(ll)_locked.dot)
locked_svg=$(foreach ll,$(all_locks),$(file_main)_$(ll)_locked.svg)

all: $(file_main).dot\
		$(file_main).svg\
		$(locked_verilog)\
		$(locked_dot)\
		$(locked_svg)
%.v:
	echo "what $@"
	python ../logiclock_wrapper.py -c -f $(file_main).v -l $(subst _locked,, $(subst $(file_main)_,,$*))

%.dot: %.v
	yosys \
		-p "read_verilog -sv -formal $*.v" \
		-p "hierarchy -check -top $(module_top)" \
		-p "hierarchy -generate" \
		-p "show -prefix $* -notitle -colors 2 -width -format dot -stretch -enum"

%.svg: %.dot
	dot -Tsvg -o $@ $*.dot

.PHONY: copy locked_verilog clean $(all_locks) status

$(all_locks): % : $(file_main)_%_locked.svg

copy:
	mkdir -p $(odir)
	@for i in $(file_main).v \
	$(file_main).dot \
	$(file_main).svg \
	$(locked_verilog) \
	$(locked_keys) \
	$(locked_svg);do\
		if [ -f $$i ]; then cp $$i $(odir); fi \
	done
locked_verilog: $(locked_verilog)

clean:
	@for i in $(file_main).dot $(file_main).svg $(locked_verilog) $(locked_dot) \
	$(locked_svg) $(locked_keys);do\
			rm -f $$i; \
	done

status:
	@for i in $(file_main).v \
	$(file_main).dot \
	$(file_main).svg \
	$(locked_verilog) \
	$(locked_keys) \
	$(locked_svg);do\
		echo -n "$$i..." ; \
		if [ -f $$i ]; then echo "\033[0;32mexists\033[0m" ; \
		else echo "\033[0;31mmissing\033[0m" ; fi \
	done



